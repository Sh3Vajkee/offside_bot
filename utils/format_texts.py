import datetime
from textwrap import dedent

from db.models import CardItem, Duel, Penalty, Player, UserCard


async def format_new_free_card_text(card: CardItem):
    txt = f"""
    {card.name} aka {card.nickname}
    –†–µ–π—Ç–∏–Ω–≥: <b>{card.points}</b>
    –†–µ–¥–∫–æ—Å—Ç—å: <b>{card.rarity}</b>
    –ö–æ–º–∞–Ω–¥–∞: <b>{card.team}</b>
    """
    return dedent(txt)


async def format_view_my_cards_text(card: CardItem):
    txt = f"""
    {card.name} <b>{card.nickname}</b>
    –†–µ–π—Ç–∏–Ω–≥: <b>{card.points}</b>
    –†–µ–¥–∫–æ—Å—Ç—å: <b>{card.rarity}</b>
    –ö–æ–º–∞–Ω–¥–∞: <b>{card.team}</b>
    """
    return dedent(txt)


async def format_list_my_cards_text(cards: dict):
    txt = "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∫–∞—Ä—Ç:\n"
    for k, v in cards.items():
        txt += f"\n{v['nickname']} | –†–µ–π—Ç–∏–Ω–≥: {v['rating']} | {v['quant']} —à—Ç."

    return txt


async def format_top_rating_text(tops, user: Player, place):
    txt = "üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–∞–º\n"

    top: Player
    for num, top in enumerate(tops):
        if num == 0:
            plc = "ü•á"
        elif num == 1:
            plc = "ü•à"
        elif num == 2:
            plc = "ü•â"
        else:
            plc = f" {num + 1}."

        txt += f"\n{plc} {top.username} - {top.rating}"

    if place > len(tops):
        txt += f"\n\n{place}. {user.username} - {user.rating}"

    return txt


async def format_top_penalty_text(tops, user: Player, place):
    txt = "üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –ø–µ–Ω–∞–ª—å—Ç–∏\n"

    top: Player
    for num, top in enumerate(tops):
        if num == 0:
            plc = "ü•á"
        elif num == 1:
            plc = "ü•à"
        elif num == 2:
            plc = "ü•â"
        else:
            plc = f" {num + 1}."

        txt += f"\n{plc} {top.username} - {top.penalty_rating}"

    if place > len(tops):
        txt += f"\n\n{place}. {user.username} - {user.penalty_rating}"

    return txt


async def format_penalty_round_result_text(penalty: Penalty, result):
    # –£—Å–ª–æ–≤–∏–µ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–º–µ–Ω–∞ —Å—Ç–æ—Ä–æ–Ω
    if penalty.keeper == penalty.owner:
        keeper_username = penalty.target_username
        kicker_username = penalty.owner_username
    else:
        keeper_username = penalty.owner_username
        kicker_username = penalty.target_username

    if result:
        keeper_res_txt = f"üèÜ –¢—ã –æ—Ç–±–∏–ª —É–¥–∞—Ä\n{kicker_username} –±–∏–ª –≤ —Ç–æ—Ç –∂–µ —É–≥–æ–ª\n"
        kicker_res_txt = f"‚ùå –£–≤—ã —Ç—ã –Ω–µ –∑–∞–±–∏–ª\n{keeper_username} —É–≥–∞–¥–∞–ª —Ç–≤–æ–π —É–¥–∞—Ä\n"
    else:
        keeper_res_txt = f"‚ùå –¢—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª –≥–æ–ª\n{kicker_username} –±–∏–ª –≤ –¥—Ä—É–≥–æ–π —É–≥–æ–ª\n"
        kicker_res_txt = f"‚öΩÔ∏è –ì–û–õ!!!\n{keeper_username} –ø—Ä—ã–≥–Ω—É–ª –≤ –¥—Ä—É–≥—É—é —Å—Ç–æ—Ä–æ–Ω—É\n"

    owner_res_txt = penalty.owner_txt.replace("0", "‚ùå").replace("1", "‚öΩÔ∏è")
    target_res_txt = penalty.target_txt.replace("0", "‚ùå").replace("1", "‚öΩÔ∏è")

    if (penalty.round % 2) == 0:
        target_res_txt += "‚åõÔ∏è"
    else:
        owner_res_txt += "‚åõÔ∏è"

    # –£—Å–ª–æ–≤–∏–µ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–º–µ–Ω–∞ —Å—Ç–æ—Ä–æ–Ω
    if penalty.keeper == penalty.target:
        keeper_txt = keeper_res_txt + "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–≤–æ–∏—Ö —É–¥–∞—Ä–æ–≤:\n" + \
            owner_res_txt + "\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–∞—Ä–æ–≤ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:\n" + target_res_txt
        kicker_txt = kicker_res_txt + "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–≤–æ–∏—Ö —É–¥–∞—Ä–æ–≤:\n" + \
            target_res_txt + "\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–∞—Ä–æ–≤ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:\n" + owner_res_txt

    else:
        keeper_txt = keeper_res_txt + "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–≤–æ–∏—Ö —É–¥–∞—Ä–æ–≤:\n" + \
            target_res_txt + "\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–∞—Ä–æ–≤ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:\n" + owner_res_txt
        kicker_txt = kicker_res_txt + "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–≤–æ–∏—Ö —É–¥–∞—Ä–æ–≤:\n" + \
            owner_res_txt + "\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–∞—Ä–æ–≤ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:\n" + target_res_txt

    return keeper_txt, kicker_txt


async def format_penalty_final_result_text(penalty: Penalty):
    owner_res_txt = f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–∞—Ä–æ–≤ {penalty.owner_username}\n"
    target_res_txt = f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–∞—Ä–æ–≤ {penalty.target_username}\n"

    owner_res_txt += penalty.owner_txt.replace("0", "‚ùå").replace("1", "‚öΩÔ∏è")
    target_res_txt += penalty.target_txt.replace("0", "‚ùå").replace("1", "‚öΩÔ∏è")

    if penalty.owner_card_id == 0:
        if penalty.owner == penalty.winner:
            winner_txt = f"\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - {penalty.owner_username}"
        elif penalty.target == penalty.winner:
            winner_txt = f"\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - {penalty.target_username}"
        else:
            winner_txt = "\nüèÜ –í—ã –∑–∞–±–∏–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ–≤! –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø–µ—Ä–µ–∏–≥—Ä–æ–≤–∫—É –∏–ª–∏ –∂–µ –Ω–∏—á—å—é, –≤—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏!"
    else:
        if penalty.owner == penalty.winner:
            winner_txt = f"\n{penalty.owner_username} –ø–æ–±–µ–¥–∏–ª –∏ –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—É —Å–æ–ø–µ—Ä–Ω–∏–∫–∞"
        elif penalty.target == penalty.winner:
            winner_txt = f"\n{penalty.target_username} –ø–æ–±–µ–¥–∏–ª –∏ –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—É —Å–æ–ø–µ—Ä–Ω–∏–∫–∞"
        else:
            winner_txt = "\nüèÜ –í—ã –∑–∞–±–∏–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ–≤! –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø–µ—Ä–µ–∏–≥—Ä–æ–≤–∫—É –∏–ª–∏ –∂–µ –Ω–∏—á—å—é, –≤—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏!"

    return target_res_txt + "\n" + owner_res_txt + winner_txt


async def format_user_info_text(user: Player):
    last_date = datetime.datetime.fromtimestamp(user.last_open - 86400)
    date_str = last_date.strftime("%d.%m.%Y %H:%M")
    txt = f"""
    –î–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username} (ID {user.id})

    –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - {user.joined_at_txt}
    –°–æ–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ - {user.card_quants}
    –†–µ–π—Ç–∏–Ω–≥ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ - {user.rating}
    –†–µ–π—Ç–∏–Ω–≥ –≤ –∏–≥—Ä–µ –ø–µ–Ω–∞–ª—å—Ç–∏ - {user.penalty_rating}

    –ó–∞–±–∏—Ä–∞–ª –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É - {date_str}
    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - {user.transactions}
    """
    return dedent(txt)


async def format_craft_text(duplicates):
    txt = f"""
    üõ†Ô∏è –¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –º–µ–Ω—é –∫—Ä–∞—Ñ—Ç–∞.

    –¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç –æ–¥–Ω–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏.

    <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç:</b>

    ‚ö™Ô∏è –û–±—ã—á–Ω—ã–µ –∫–∞—Ä—Ç—ã: {duplicates[0]}
    üü° –ù–µ–æ–±—ã—á–Ω—ã–µ –∫–∞—Ä—Ç—ã: {duplicates[1]}
    üîµ –†–µ–¥–∫–∏–µ –∫–∞—Ä—Ç—ã: {duplicates[2]}
    üü£ –≠–ø–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã: {duplicates[3]}
    üü¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã: {duplicates[4]}

    <b>–ß—Ç–æ–±—ã –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –æ–±–º–µ–Ω - –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å 5 –∫–∞—Ä—Ç –æ–¥–Ω–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏.</b>
    """
    return dedent(txt)
