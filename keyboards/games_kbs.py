from aiogram.filters.callback_data import CallbackData
from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           KeyboardButton, ReplyKeyboardMarkup)

from keyboards.cb_data import PageCB

games_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚öΩ –ü–µ–Ω–∞–ª—å—Ç–∏", callback_data="penalty"),
        ],
        [
            InlineKeyboardButton(
                text="‚òòÔ∏è –£–¥–∞—á–Ω—ã–π —É–¥–∞—Ä", callback_data="luckystrike"),
        ],
        [
            InlineKeyboardButton(
                text="üõ†Ô∏è –ö—Ä–∞—Ñ—Ç", callback_data="craft"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="startplay")
        ]
    ]
)

to_games_btn = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)

cancel_penalty_queue_btn = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="penqueuecancel")
        ]
    ]
)


lucky_shot_btn = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚öΩ –°–¥–µ–ª–∞—Ç—å —É–¥–∞—Ä", callback_data="hitls"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)

no_free_ls_btn = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üíµ –ö—É–ø–∏—Ç—å 3 —É–¥–∞—Ä–∞", callback_data="buyls"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)

penalty_kind_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üÉè –ò–≥—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç—É", callback_data=f"pengame_card"),
        ],
        [
            InlineKeyboardButton(
                text="üèÜ –ò–≥—Ä–∞ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥", callback_data=f"pengame_rating"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)

penalty_opp_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Å–æ–ø–µ—Ä–Ω–∏–∫", callback_data=f"penopp_random"),
        ],
        [
            InlineKeyboardButton(
                text="‚úâÔ∏è –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å–æ–ø–µ—Ä–Ω–∏–∫", callback_data=f"penopp_target"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)


def penalty_offer_kb(pen_id):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data=f"penstart_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"pencancel_{pen_id}")
            ]
        ]
    )
    return keyboard


def card_penalty_offer_kb(pen_id):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üÉè –í—ã–±—Ä–∞—Ç—å –∫–∞—Ä—Ç—É –¥–ª—è –ø–µ–Ω–∞–ª—å—Ç–∏", callback_data=f"penawscard_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"pencancel_{pen_id}")
            ]
        ]
    )
    return keyboard


def card_penalty_answer_kb(pen_id):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data=f"pencardstart_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"pencancel_{pen_id}")
            ]
        ]
    )
    return keyboard


after_penalty_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚öΩ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤ –≤ –ü–µ–Ω–∞–ª—å—Ç–∏", callback_data="top_penalty"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)


draw_penalty_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚öΩ –ü–µ—Ä–µ–∏–≥—Ä–æ–≤–∫–∞", callback_data="penalty"),
        ],
        [
            InlineKeyboardButton(
                text="üè≥ –ù–∏—á—å—è", callback_data="games")
        ]
    ]
)


def penalty_action_kb(pen_id, kind):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="1Ô∏è‚É£", callback_data=f"pnactn_{kind}_{pen_id}_1"),
                InlineKeyboardButton(
                    text="2Ô∏è‚É£", callback_data=f"pnactn_{kind}_{pen_id}_2"),
                InlineKeyboardButton(
                    text="3Ô∏è‚É£", callback_data=f"pnactn_{kind}_{pen_id}_3")
            ]
        ]
    )
    return keyboard


card_pen_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üÉè –í—Å–µ –∫–∞—Ä—Ç—ã", callback_data=f"penrar_all")
        ],
        [
            InlineKeyboardButton(
                text="üÄÑ –ü–æ —Ä–µ–¥–∫–æ—Å—Ç–∏", callback_data=f"penrarities")
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="games")
        ]
    ]
)


def card_penalty_kb(page, last, sorting, card_id):
    btns = []

    if sorting == "up":
        txt = "–†–µ–π—Ç–∏–Ω–≥‚¨ÜÔ∏è"
    elif sorting == "down":
        txt = "–†–µ–π—Ç–∏–Ω–≥‚¨áÔ∏è"
    else:
        txt = "–†–µ–π—Ç–∏–Ω–≥‚ùå"

    btns.append([
        InlineKeyboardButton(text=txt, callback_data=f"srtpen_{sorting}")])
    btns.append([
        InlineKeyboardButton(
            text="–í—ã–±—Ä–∞—Ç—å –¥–ª—è –ø–µ–Ω–∞–ª—å—Ç–∏", callback_data=f"chspencard_{card_id}")])

    page_btns = []
    if page > 1:
        page_btns.append(InlineKeyboardButton(
            text="<<", callback_data=PageCB(num=1, last=last).pack()))
        page_btns.append(InlineKeyboardButton(
            text="<", callback_data=PageCB(num=page-1, last=last).pack()))

    page_btns.append(InlineKeyboardButton(
        text=f"({page}/{last})", callback_data="useless"))

    if page < last:
        page_btns.append(InlineKeyboardButton(
            text=">", callback_data=PageCB(num=page+1, last=last).pack()))
        page_btns.append(InlineKeyboardButton(
            text=">>", callback_data=PageCB(num=last, last=last).pack()))

    btns.append(page_btns)

    btns.append([
        InlineKeyboardButton(
            text="‚è™ –ù–∞–∑–∞–¥", callback_data="back_to_games")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=btns)
    return keyboard


pen_rarities_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–û–±—ã—á–Ω—ã–µ", callback_data="penrar_–û–ë–´–ß–ù–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–ù–µ–æ–±—ã—á–Ω—ã–µ", callback_data="penrar_–ù–ï–û–ë–´–ß–ù–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–†–µ–¥–∫–∏–µ", callback_data="penrar_–†–ï–î–ö–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–≠–ø–∏—á–µ—Å–∫–∏–µ", callback_data="penrar_–≠–ü–ò–ß–ï–°–ö–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ", callback_data="penrar_–£–ù–ò–ö–ê–õ–¨–ù–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ", callback_data="penrar_–õ–ï–ì–ï–ù–î–ê–†–ù–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ", callback_data="penrar_–≠–ö–°–ö–õ–Æ–ó–ò–í–ù–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ", callback_data="penrar_–ú–ò–§–ò–ß–ï–°–ö–ê–Ø"),
        ],
        [
            InlineKeyboardButton(
                text="‚è™ –ù–∞–∑–∞–¥", callback_data="back_to_games")
        ]
    ]
)


def answ_card_pen_kb(pen_id):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üÉè –í—Å–µ –∫–∞—Ä—Ç—ã", callback_data=f"answpenrar_all_{pen_id}")
            ],
            [
                InlineKeyboardButton(
                    text="üÄÑ –ü–æ —Ä–µ–¥–∫–æ—Å—Ç–∏", callback_data=f"answpenrarities_{pen_id}")
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"pencancel_{pen_id}")
            ]
        ]
    )
    return keyboard


def answ_pen_rarity_cards_kb(pen_id):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–û–±—ã—á–Ω—ã–µ", callback_data=f"answpenrar_–û–ë–´–ß–ù–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–ù–µ–æ–±—ã—á–Ω—ã–µ", callback_data=f"answpenrar_–ù–ï–û–ë–´–ß–ù–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–†–µ–¥–∫–∏–µ", callback_data=f"answpenrar_–†–ï–î–ö–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–≠–ø–∏—á–µ—Å–∫–∏–µ", callback_data=f"answpenrar_–≠–ü–ò–ß–ï–°–ö–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ", callback_data=f"answpenrar_–£–ù–ò–ö–ê–õ–¨–ù–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ", callback_data=f"answpenrar_–õ–ï–ì–ï–ù–î–ê–†–ù–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ", callback_data=f"answpenrar_–≠–ö–°–ö–õ–Æ–ó–ò–í–ù–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ", callback_data=f"answpenrar_–ú–ò–§–ò–ß–ï–°–ö–ê–Ø_{pen_id}"),
            ],
            [
                InlineKeyboardButton(
                    text="‚è™ –ù–∞–∑–∞–¥", callback_data=f"penawscard_{pen_id}")
            ]
        ]
    )
    return keyboard


def answ_card_penalty_kb(page, last, sorting, card_id, pen_id):
    btns = []

    if sorting == "up":
        txt = "–†–µ–π—Ç–∏–Ω–≥‚¨ÜÔ∏è"
    elif sorting == "down":
        txt = "–†–µ–π—Ç–∏–Ω–≥‚¨áÔ∏è"
    else:
        txt = "–†–µ–π—Ç–∏–Ω–≥‚ùå"

    btns.append([
        InlineKeyboardButton(text=txt, callback_data=f"answsrtpen_{sorting}")])
    btns.append([
        InlineKeyboardButton(
            text="–í—ã–±—Ä–∞—Ç—å –¥–ª—è –ø–µ–Ω–∞–ª—å—Ç–∏", callback_data=f"answpencard_{card_id}")])

    page_btns = []
    if page > 1:
        page_btns.append(InlineKeyboardButton(
            text="<<", callback_data=PageCB(num=1, last=last).pack()))
        page_btns.append(InlineKeyboardButton(
            text="<", callback_data=PageCB(num=page-1, last=last).pack()))

    page_btns.append(InlineKeyboardButton(
        text=f"({page}/{last})", callback_data="useless"))

    if page < last:
        page_btns.append(InlineKeyboardButton(
            text=">", callback_data=PageCB(num=page+1, last=last).pack()))
        page_btns.append(InlineKeyboardButton(
            text=">>", callback_data=PageCB(num=last, last=last).pack()))

    btns.append(page_btns)

    btns.append([
        InlineKeyboardButton(
            text="‚è™ –ù–∞–∑–∞–¥", callback_data=f"penawscard_{pen_id}")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=btns)
    return keyboard
